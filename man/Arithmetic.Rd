% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/homomorphicOps.R
\name{Arithmetic}
\alias{*}
\alias{+}
\alias{-}
\alias{Arithmetic}
\title{Homomorphic operations on ciphertexts}
\usage{
ct1 + ct2
ct1 - ct2
ct1 * ct2
}
\arguments{
\item{ct1,ct2}{ciphertexts resulting from a call to \code{\link{enc}}}
}
\value{
A new ciphertext with the encrypted result of applying the operation to the
messages held by the two original cipertexts.
}
\description{
These special operations overload the standard behaviour of the
arithmetic operations to work instead homomorphically on ciphertexts.
}
\details{
Note that not all homomorphic encryption schemes will support all operations.
Also, it is important to note that typically homomorphic operations cause
an increase in the noise within a ciphertext.  Once a certain number of
operations have taken place the cipertext may no longer correctly decrypt.
If a scheme is *fully* homomorphic, then it may be possible to apply a
bootstrapping procedure which reduces the noise.
}
\examples{
p <- pars("FandV")
keys <- keygen(p)
ct1 <- enc(keys$pk, 2)
ct2 <- enc(keys$pk, 3)
ctAdd <- ct1 + ct2
ctSub <- ct1 - ct2
ctMul <- ct1 * ct2

# Decrypt to 5, -1 and 6: the result of applying +, - and * to plain messages
dec(keys$sk, ctAdd)
dec(keys$sk, ctSub)
dec(keys$sk, ctMul)
}

